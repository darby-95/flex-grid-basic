@charset "UTF-8";

*{margin: 0; padding: 0; box-sizing: border-box;}

.container {
    border: 2px solid #000; 
    background-color: yellow;
}

.container .item{
    border: 2px solid #000; 
    background-color: green;
    /* width: 100px; height: 100px; */
}


.container {
    display: flex;
    /* flex-wrap: wrap; */

    /* flex 설정시 item들은 "줄어들어라, 늘어나지마라"를 기본 속성으로 가지고 있다. */
}

.item {
    /* 위와같이, 기본 속성을 가지고 있기 때문에 늘어나라고 명령어를 주어야 한다. */

    flex-grow: 1; 
    
    /* flex-basis: 200px; */
    /* flex-grow는 flex-basis보다 커질 수 있는지를 결정, 0보다 큰값이 들어가면 늘어난다.
    기본값이 0으로 늘어나지 않는다. */

    /* flex-shrink: 0; */
    /* flex-shrink는 flex-basis보다 작아질 수 있는지를 결정, 기본값이 1이므로 flex-basis보다 줄어든다.
    flex-shrink: 0;은 flex-basis보다 작아지지 않는다. 
    */

    flex: auto; /* 기본값 */
    /* flex-basis가 auto라는 의미는 자식이 가진 공간만큼은 기본적으로 확보한다. */
    width: 200px;
    flex: 0; /* 값을 하나 주었을때 값은 flex-grow가 바뀌는 값이다.
    flex-shrink: 1, flex-basis:0% */

    flex:1 1; /* flex-grow: 1;    flex-shrink: 1;     flex-basis: 0%; */
    flex:1 200px; /* flex-grow: 1;    flex-shrink: 1;     flex-basis: 200px; */
}

/* 👇 위에 flex grow로 늘어나라고 했기 때문에, 20%의 빈공간을 채워버린다. */
.header {width: 100px; flex-shrink: 0; /* 0은 부정의 뜻, 줄어들지마라. */} 
.banner {width: 60%;}
.content {width: 20%;}